import sys

num = list(input())


if "0" not in num:
    print(-1)
else:
    temp = 0
    temp2 = []
    for i in num:
        temp += int(i)
    if temp % 3 != 0:
        print(-1)
    else:
        print("".join(sorted(num, reverse=True)))

# 입력
# 숫자

# 출력
# 숫자를 이용한 30의 배수의 최대수

# 조건
# 주어진 숫자를 재조합해서 30의 배수 이 되어야한다
# 그중에서 최대 수

# 3의 배수 조건
# 각 자리 덧셈 총합이 3의 배수

# 1. 입력
# 2. 0이 하나 이상 있는지 확인
# 3. 1의 자리는 무조건 0으로 고정
# === 반복 ===
# 	4. 각 자리의 합이 3% 해서 0인지 판별
# 	아니면 -1
# === 반복 끝 ===
# 5. 최대수 출력

# "".join(리스트)는 리스트 안의 문자열을 하나로 합쳐서 새로운 문자열을 반환하는 함수
# 1~10의 배수 판별법 (기본적인 규칙)

# 숫자	배수 판별법
# 2	끝자리가 0, 2, 4, 6, 8이면 2의 배수
# 3	모든 자리 숫자의 합이 3의 배수면 3의 배수
# 4	마지막 두 자리 숫자가 4의 배수면 4의 배수
# 5	끝자리가 0 또는 5면 5의 배수
# 6	2의 배수이면서 3의 배수면 6의 배수
# 8	마지막 세 자리 숫자가 8의 배수면 8의 배수
# 9	모든 자리 숫자의 합이 9의 배수면 9의 배수
# 10	끝자리가 0이면 10의 배수

# ✅ 11 이상의 배수 판별법 (특수 규칙이 있는 경우)
# 🔹 11의 배수
# ▶ 조건: (홀수 번째 자리 합 - 짝수 번째 자리 합)이 11의 배수이면 11의 배수
# 121 → (1+1) - 2 = 0 → 11의 배수 O
# 234 → (2+4) - 3 = 3 → 11의 배수 X
# 🔹 13의 배수
# ▶ 조건: (마지막 자리 숫자의 9배를 앞자리 숫자에 더하거나 빼기)
# ✔ 13은 소수라서 11처럼 간단한 규칙은 없지만, 마지막 자리 활용법이 있음

# 🔹 7의 배수
# ▶ 조건: (마지막 자리 숫자의 2배를 앞자리에서 빼기)

# 20−(3×2)=20−6=14 → 14는 7의 배수 → 203은 7의 배수 O

# 🔹 111의 배수
# ▶ 조건: 3과 37의 배수이면 111의 배수

# 111=3×37

# 🔹 141의 배수
# ▶ 조건: 3과 47의 배수이면 141의 배수

# 141=3×47

# 🔹 17의 배수
# ▶ 조건: (마지막 자리 숫자의 5배를 앞자리에서 빼기)

# 289 → 28−(9×5)=28−45=−17 → -17은 17의 배수 → 289는 17의 배수 O