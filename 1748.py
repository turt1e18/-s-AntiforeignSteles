import sys

count = int(sys.stdin.readline().rstrip())
maxLen = len(str(count))
c = 0

for i in range(maxLen-1):
    c += 9 * 10 ** i * (i+1)
sys.stdout.write(str(c + (count - 10**(maxLen-1) + 1) * maxLen))

# ** 거듭제곱

# 1-9 -> 1 9개
# 10 - 99 -> 2 90개
# 100 - 999 -> 3 900개
# 1000 - 9999 -> 4 ... 9000개

# 1+1+1+1+1+1+1+1+1

# 진짜 이해가 안되서 GPT 해석

# 이 반복문은 1자리 수부터 (N보다 작은) 여러 자리 수의 자릿수를 더하는 역할을 해.
# i는 0부터 len_N - 2까지 증가하면서 반복돼.
# 각 반복에서 9 * 10^i * (i+1)을 더하는데, 이걸 이해하려면 단계별로 보자.
# i 값에 따른 해석
# i 값	숫자 범위	개수 (9 × 10^i)	각 숫자의 자리수 (i+1)	총 자리수 증가량 (9 × 10^i × (i+1))
# 0	1 ~ 9	9	1자리	9 × 1 = 9
# 1	10 ~ 99	90	2자리	90 × 2 = 180
# 2	100 ~ 999	900	3자리	900 × 3 = 2700
# 3	1000 ~ 9999	9000	4자리	9000 × 4 = 36000
# 즉,

# 1자리 숫자(1~9) → 9개 → 9 × 1 = 9자리
# 2자리 숫자(10~99) → 90개 → 90 × 2 = 180자리
# 3자리 숫자(100~999) → 900개 → 900 × 3 = 2700자리
# 이런 식으로 계산해서 count에 더해.
# 예제 실행
# N = 120일 때 len_N = 3
# i = 0 → count += 9 * 10^0 * (0+1) = 9
# i = 1 → count += 9 * 10^1 * (1+1) = 180
# count = 9 + 180 = 189
# → 1자리(9개)와 2자리(90개)의 총 자릿수를 미리 계산함.

# 수식 해석
# 10**(len_N - 1)

# N이 몇 자리인지 파악해서 그 자리수의 시작 숫자를 찾는 역할이야.
# 예를 들어,
# N = 120이면 len_N = 3, 따라서 10**(3-1) = 10^2 = 100 (즉, 3자리 수의 시작인 100을 찾음)
# (N - 10**(len_N - 1) + 1)

# N이 포함된 자리수에서 N까지의 개수를 구함.
# 예를 들어 N = 120이면, 100~120까지 총 120 - 100 + 1 = 21개가 있음.
# * len_N

# 이 숫자들은 모두 len_N 자리이므로, 총 자릿수를 구하기 위해 곱해 줌.
# 예제 실행
# N = 120, len_N = 3
# 10^(3-1) = 100
# (120 - 100 + 1) = 21
# 21 × 3 = 63
# count + 63 = 189 + 63 = 252 → 120까지 만든 숫자의 전체 길이 = 252자리